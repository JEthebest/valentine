const quotes = [
    "–õ—é–±–æ–≤—å - —ç—Ç–æ –∫–æ–≥–¥–∞ —Å—á–∞—Å—Ç—å–µ –¥—Ä—É–≥–æ–≥–æ –≤–∞–∂–Ω–µ–µ —Ç–≤–æ–µ–≥–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ.",
    "–í —Ç–≤–æ–∏—Ö –≥–ª–∞–∑–∞—Ö —è –≤–∏–∂—É —Å–≤–æ—ë –±—É–¥—É—â–µ–µ.",
    "–¢—ã - –ø—Ä–∏—á–∏–Ω–∞ –º–æ–µ–π —É–ª—ã–±–∫–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.",
    "–ú–æ—ë —Å–µ—Ä–¥—Ü–µ –±—å—ë—Ç—Å—è –≤ —Ä–∏—Ç–º–µ —Ç–≤–æ–µ–≥–æ –∏–º–µ–Ω–∏.",
    "–° —Ç–æ–±–æ–π –¥–∞–∂–µ –æ–±—ã—á–Ω—ã–π –¥–µ–Ω—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—Å–æ–±–µ–Ω–Ω—ã–º.",
    "–¢—ã –¥–µ–ª–∞–µ—à—å –º–æ—é –∂–∏–∑–Ω—å –ø–æ–ª–Ω–æ–π –∫—Ä–∞—Å–æ–∫.",
    "–Ø –≤–ª—é–±–ª—è—é—Å—å –≤ —Ç–µ–±—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∑–∞–Ω–æ–≤–æ.",
    "–¢—ã - –º–æ–π –ª—é–±–∏–º—ã–π —á–µ–ª–æ–≤–µ–∫ –≤–æ –≤—Å–µ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π.",
    "–ö–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç —Å —Ç–æ–±–æ–π - —ç—Ç–æ –º–∞–ª–µ–Ω—å–∫–æ–µ —á—É–¥–æ.",
    "–¢—ã - –º–æ—ë —Å–∞–º–æ–µ –ª—é–±–∏–º–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ.",
    "–° —Ç–æ–±–æ–π —è —á—É–≤—Å—Ç–≤—É—é —Å–µ–±—è –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –∂–∏–≤—ã–º.",
    "–¢—ã - –º–æ–π —Å–∞–º—ã–π –ª—é–±–∏–º—ã–π —Å–æ–Ω, —Å—Ç–∞–≤—à–∏–π —è–≤—å—é."
];

const loveFacts = [
    "–°–µ—Ä–¥—Ü–µ —á–µ–ª–æ–≤–µ–∫–∞ –±—å–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ –ø—Ä–∏ –≤–∏–¥–µ –ª—é–±–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞.",
    "–í–ª—é–±–ª–µ–Ω–Ω—ã–µ –ª—é–¥–∏ –∏–º–µ—é—Ç —Å—Ö–æ–∂–∏–π —Å–µ—Ä–¥–µ—á–Ω—ã–π —Ä–∏—Ç–º.",
    "–û–±—ä—è—Ç–∏—è –¥–ª–∏–Ω–æ–π –≤ 20 —Å–µ–∫—É–Ω–¥ –¥–µ–ª–∞—é—Ç –ª—é–¥–µ–π —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ.",
    "–õ—é–±–æ–≤—å –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ç–µ –∂–µ –∑–æ–Ω—ã –º–æ–∑–≥–∞, —á—Ç–æ –∏ —à–æ–∫–æ–ª–∞–¥.",
    "–í–∑–≥–ª—è–¥ –≤ –≥–ª–∞–∑–∞ –ª—é–±–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤—ã–∑—ã–≤–∞–µ—Ç –≤—ã–±—Ä–æ—Å –æ–∫—Å–∏—Ç–æ—Ü–∏–Ω–∞.",
    "–õ—é–±–æ–≤—å –º–æ–∂–µ—Ç –æ–±–ª–µ–≥—á–∞—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –±–æ–ª—å.",
    "–ß—É–≤—Å—Ç–≤–æ –±–∞–±–æ—á–µ–∫ –≤ –∂–∏–≤–æ—Ç–µ –≤—ã–∑–≤–∞–Ω–æ –∞–¥—Ä–µ–Ω–∞–ª–∏–Ω–æ–º.",
    "–í–ª—é–±–ª–µ–Ω–Ω—ã–µ –ø–∞—Ä—ã –Ω–∞—á–∏–Ω–∞—é—Ç –ø–æ—Ö–æ–¥–∏—Ç—å –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞.",
    "–†–∞–∑–ª—É–∫–∞ —É—Å–∏–ª–∏–≤–∞–µ—Ç —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —á—É–≤—Å—Ç–≤–∞.",
    "–õ—é–±–æ–≤—å –¥–µ–ª–∞–µ—Ç –ª—é–¥–µ–π –±–æ–ª–µ–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º–∏.",
    "–ü–æ—Ü–µ–ª—É–π —Å–∂–∏–≥–∞–µ—Ç –æ–∫–æ–ª–æ 6.4 –∫–∞–ª–æ—Ä–∏–π –≤ –º–∏–Ω—É—Ç—É.",
    "–û–±–Ω–∏–º–∞—Ç—å –ª—é–±–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –∑–¥–æ—Ä–æ–≤—å—è."
];

const colors = [
    ['#FF1493', '#FF69B4'],  // –Ø—Ä–∫–∏–π —Ä–æ–∑–æ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
    ['#FF4500', '#FF8C00'],  // –û—Ä–∞–Ω–∂–µ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
    ['#FF0000', '#FF6B6B'],  // –ö—Ä–∞—Å–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
    ['#FF1744', '#FF616F'],  // –ú–∞–ª–∏–Ω–æ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
    ['#FF4081', '#FF80AB']   // –†–æ–∑–æ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç
];

function getRandomItem(array) {
    return array[Math.floor(Math.random() * array.length)];
}

function updateContent() {
    const quote = getRandomItem(quotes);
    const fact = getRandomItem(loveFacts);
    const [color1, color2] = getRandomItem(colors);
    
    document.querySelector('.quote').textContent = quote;
    document.querySelector('.love-fact').textContent = fact;
    document.body.style.background = `linear-gradient(45deg, ${color1}, ${color2})`;
}

let heartCount = 0;
const maxHearts = 50; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–¥–µ—Ü –Ω–∞ —ç–∫—Ä–∞–Ω–µ

function createFloatingHearts() {
    const heartsContainer = document.getElementById('hearts');
    const hearts = ['‚ù§Ô∏è', 'üíñ', 'üíù', 'üíï', 'üíó', 'üíì', 'üíò', 'üíû', 'üíü', '‚ô•Ô∏è'];
    const colors = [
        '#ff6b6b',
        '#ff8787',
        '#ffa8a8',
        '#ffc9c9',
        '#ff4d4d',
        '#ff3333',
        '#ff1a1a',
        '#ff0000',
        '#ff66b2',
        '#ff3399'
    ];
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –º–æ–±–∏–ª—å–Ω—ã–º
    const isMobile = window.innerWidth <= 600;
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    const config = {
        initialHearts: isMobile ? 20 : 50,
        interval: isMobile ? 200 : 100,
        minDuration: isMobile ? 2 : 3,
        maxDuration: isMobile ? 4 : 7,
        minSize: isMobile ? 1 : 1.5,
        maxSize: isMobile ? 2 : 3.5
    };
    
    function createHeart() {
        const heart = document.createElement('span');
        heart.className = 'floating-heart';
        heart.textContent = getRandomItem(hearts);
        
        // –°–ª—É—á–∞–π–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è —Å —á–µ—Ç—ã—Ä–µ—Ö —Å—Ç–æ—Ä–æ–Ω
        const side = Math.floor(Math.random() * 4);
        let startPosition;
        
        switch(side) {
            case 0: // —Å–≤–µ—Ä—Ö—É
                startPosition = { left: Math.random() * 100 + 'vw', top: '-5vh' };
                break;
            case 1: // —Å–ø—Ä–∞–≤–∞
                startPosition = { left: '105vw', top: Math.random() * 100 + 'vh' };
                break;
            case 2: // —Å–Ω–∏–∑—É
                startPosition = { left: Math.random() * 100 + 'vw', top: '105vh' };
                break;
            case 3: // —Å–ª–µ–≤–∞
                startPosition = { left: '-5vw', top: Math.random() * 100 + 'vh' };
                break;
        }
        
        heart.style.left = startPosition.left;
        heart.style.top = startPosition.top;
        
        // –°–ª—É—á–∞–π–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏ —Ü–≤–µ—Ç
        const size = config.minSize + Math.random() * (config.maxSize - config.minSize);
        heart.style.fontSize = size + 'rem';
        heart.style.color = getRandomItem(colors);
        
        // –°–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏
        const duration = config.minDuration + Math.random() * (config.maxDuration - config.minDuration);
        heart.style.transition = `all ${duration}s ease-in-out`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–¥–µ—á–∫–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        heartsContainer.appendChild(heart);
        
        // –ó–∞–¥–∞–µ–º –∫–æ–Ω–µ—á–Ω—É—é –ø–æ–∑–∏—Ü–∏—é —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        setTimeout(() => {
            // –î–≤–∏–≥–∞–µ–º –≤ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—É—é —Å—Ç–æ—Ä–æ–Ω—É
            let targetX, targetY;
            switch(side) {
                case 0: // —Å–≤–µ—Ä—Ö—É -> –≤–Ω–∏–∑
                    targetX = Math.random() * 100 + 'vw';
                    targetY = '105vh';
                    break;
                case 1: // —Å–ø—Ä–∞–≤–∞ -> –≤–ª–µ–≤–æ
                    targetX = '-5vw';
                    targetY = Math.random() * 100 + 'vh';
                    break;
                case 2: // —Å–Ω–∏–∑—É -> –≤–≤–µ—Ä—Ö
                    targetX = Math.random() * 100 + 'vw';
                    targetY = '-5vh';
                    break;
                case 3: // —Å–ª–µ–≤–∞ -> –≤–ø—Ä–∞–≤–æ
                    targetX = '105vw';
                    targetY = Math.random() * 100 + 'vh';
                    break;
            }
            
            const rotation = Math.random() * 360 - 180; // –£–º–µ–Ω—å—à–∞–µ–º –≤—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
            const scale = 0.8 + Math.random() * 0.4; // –ú–µ–Ω—å—à–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
            heart.style.transform = `translate(${targetX}, ${targetY}) rotate(${rotation}deg) scale(${scale})`;
        }, 50);
        
        // –£–¥–∞–ª—è–µ–º —Å–µ—Ä–¥–µ—á–∫–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            heart.remove();
        }, duration * 1000);
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–µ—Ä–¥–µ—á–∫–∏
    for (let i = 0; i < config.initialHearts; i++) {
        setTimeout(() => createHeart(), Math.random() * 1000);
    }
    
    // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Å–µ—Ä–¥–µ—á–∫–∏
    setInterval(createHeart, config.interval);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    window.addEventListener('resize', () => {
        const newIsMobile = window.innerWidth <= 600;
        if (newIsMobile !== isMobile) {
            location.reload(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        }
    });
}

function createSparkle(x, y) {
    const sparkle = document.createElement('div');
    sparkle.className = 'sparkle';
    sparkle.style.left = x + 'px';
    sparkle.style.top = y + 'px';
    document.body.appendChild(sparkle);
    
    setTimeout(() => sparkle.remove(), 1000);
}

function addSparkleEffect(element) {
    element.addEventListener('mousemove', (e) => {
        if (Math.random() > 0.8) { // –°–æ–∑–¥–∞–µ–º –∏—Å–∫—Ä—ã —Ç–æ–ª—å–∫–æ –∏–Ω–æ–≥–¥–∞
            const rect = element.getBoundingClientRect();
            createSparkle(e.clientX, e.clientY);
        }
    });
}

function initializeCard() {
    updateContent();
    createFloatingHearts();
    
    const mainHeart = document.querySelector('#mainHeart');
    const card = document.querySelector('.valentine-card');
    
    mainHeart.addEventListener('click', function(e) {
        this.classList.add('heart-click');
        for(let i = 0; i < 15; i++) {
            setTimeout(() => {
                createSparkle(
                    e.clientX + (Math.random() - 0.5) * 150,
                    e.clientY + (Math.random() - 0.5) * 150
                );
            }, i * 100);
        }
        setTimeout(() => this.classList.remove('heart-click'), 1000);
    });

    // 3D —ç—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏
    card.addEventListener('mousemove', (e) => {
        const rect = card.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        
        const centerX = rect.width / 2;
        const centerY = rect.height / 2;
        
        const rotateX = (y - centerY) / 20;
        const rotateY = -(x - centerX) / 20;
        
        card.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
    });
    
    card.addEventListener('mouseleave', () => {
        card.style.transform = 'perspective(1000px) rotateX(0) rotateY(0)';
    });

    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∏—Å–∫—Ä
    addSparkleEffect(document.querySelector('.quote'));
    addSparkleEffect(document.querySelector('.love-fact'));
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–∞—Å–∞–Ω–∏–π –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    card.addEventListener('touchmove', (e) => {
        e.preventDefault();
        const touch = e.touches[0];
        const rect = card.getBoundingClientRect();
        const x = touch.clientX - rect.left;
        const y = touch.clientY - rect.top;
        
        createSparkle(touch.clientX, touch.clientY);
    });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('load', initializeCard);